swagger: "2.0"
info:
  description: "This is an API documentation for Yalantis Golang School Project by Oleg Geley"
  version: "1.0.0"
  title: "Golang School Project"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "oleg.geley.go@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

host: "127.0.0.1:4040"
basePath: "/"

tags:
  - name: "Dashboard"
    description: "Everything that a project contains"

schemes:
  - "http"

paths:

  #######################################################
  /projects/:

    get:
      tags:
        - "Projects"
      summary: "Get a list of all projects on dashboard"
      description: "This endpoint uses a GET request to retrieve a list of all projects"
      produces:
        - "application/json"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
        500:
          description: "Internal server error"


    post:
      tags:
        - "Projects"
      summary: "Create new project"
      description: "This endpoint uses a POST request to create a new project"
      produces:
        - "application/json"
      responses:
        "400":
          description: "Bad request"
        "201":
          description: "Created"
  /projects/{id}:
    get:
      tags:
        - "Projects"
      summary: "Get a project by project id"
      description: "This endpoint uses a GET request to retrieve a project by id"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of project to return"
          required: true
          type: "integer"
          format: "int"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
    #          schema:
    #          $ref: "#/definitions/Project"

    delete:
      tags:
        - "Projects"
      summary: "Delete a project by project id"
      description: "This endpoint uses a DELETE request to delete a project by id"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of project to delete"
          required: true
          type: "integer"
          format: "int"
      responses:
        204:
          description: "No content"
        400:
          description: "Bad request"


    put:
      tags:
        - "Projects"
      summary: "Update a project by project id"
      description: "This endpoint uses an UPDATE request to update a project by id"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of project to update"
          required: true
          type: "integer"
          format: "int"
        - in: "body"
          name: "body"
          description: "Updated user object"
          required: true
          schema:
            $ref: "#/definitions/Project"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
  #######################################################
  /columns/:
    get:
      tags:
        - "Columns"
      summary: "Get a list of all columns"
      description: "This endpoint uses a GET request to retrieve a list of all columns"
      produces:
        - "application/json"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
        500:
          description: "Internal server error"
  /projects/{projectID}/columns/:
    get:
      tags:
        - "Columns"
      summary: "Get columns by projectID"
      description: "This endpoint uses a GET request to retrieve columns by projectID"
      produces:
        - "application/json"
      parameters:
        - name: "projectID"
          in: "path"
          description: "ID of project to return"
          required: true
          type: "integer"
          format: "int"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
    post:
      tags:
        - "Columns"
      summary: "Create new column"
      description: "This endpoint uses a POST request to create a new column"
      produces:
        - "application/json"
      parameters:
        - name: "projectID"
          in: "path"
          description: "ID of a project"
          required: true
          type: "integer"
          format: "int"
      responses:
        "400":
          description: "Bad request"
        "201":
          description: "Created"
  /projects/{projectID}/columns/{columnID}:
    delete:
      tags:
        - "Columns"
      summary: "Delete a column by projectID and columnID"
      description: "This endpoint uses a DELETE request to delete a project by projectID and columnID"
      produces:
        - "application/json"
      parameters:
        - name: "projectID"
          in: "path"
          description: "ID of a project"
          required: true
          type: "integer"
          format: "int"
        - name: "columnID"
          in: "path"
          description: "ID of a column to delete"
          required: true
          type: "integer"
          format: "int"
      responses:
        204:
          description: "No content"
        400:
          description: "Bad request"
    get:
      tags:
        - "Columns"
      summary: "Get column by projectID and columnID"
      description: "This endpoint uses a GET request to retrieve columns by projectID and columnID"
      produces:
        - "application/json"
      parameters:
        - name: "projectID"
          in: "path"
          description: "ID of a project"
          required: true
          type: "integer"
          format: "int"
        - name: "columnID"
          in: "path"
          description: "ID of a column to return"
          required: true
          type: "integer"
          format: "int"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
    put:
      tags:
        - "Columns"
      summary: "Update a column by by projectID and columnID"
      description: "This endpoint uses an UPDATE request to update a column by by projectID and columnID"
      produces:
        - "application/json"
      parameters:
        - name: "projectID"
          in: "path"
          description: "ID of project"
          required: true
          type: "integer"
          format: "int"
        - name: "columnID"
          in: "path"
          description: "ID of a column to update"
          required: true
          type: "integer"
          format: "int"
        - in: "body"
          name: "body"
          description: "Updated column object"
          required: true
          schema:
            $ref: "#/definitions/Column"
      responses:
        200:
          #            description: "OK"
          #            schema:
          $ref: "#/definitions/Project"
        400:
          description: "Bad request"
  #######################################################
  /tasks/:
    get:
      tags:
        - "Tasks"
      summary: "Get a list of all tasks"
      description: "This endpoint uses a GET request to retrieve a list of all tasks"
      produces:
        - "application/json"
      responses:
        200:
          description: "OK"
  /projects/{projectID}/columns/{columnID}/tasks/:
    get:
      tags:
        - "Tasks"
      summary: "Get tasks by projectID and columnID"
      description: "This endpoint uses a GET request to retrieve tasks by projectID and columnID"
      produces:
        - "application/json"
      parameters:
        - name: "projectID"
          in: "path"
          description: "ID of a project"
          required: true
          type: "integer"
          format: "int"
        - name: "columnID"
          in: "path"
          description: "ID of a column"
          required: true
          type: "integer"
          format: "int"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
    post:
      tags:
        - "Tasks"
      summary: "Create new task"
      description: "This endpoint uses a POST request to create a new tasks by projectID and columnID"
      produces:
        - "application/json"
      parameters:
        - name: "projectID"
          in: "path"
          description: "ID of a project"
          required: true
          type: "integer"
          format: "int"
        - name: "columnID"
          in: "path"
          description: "ID of a column"
          required: true
          type: "integer"
          format: "int"
      responses:
        "400":
          description: "Bad request"
        "201":
          description: "Created"
  /projects/{projectID}/columns/{columnID}/tasks/{taskID}:
    delete:
      tags:
        - "Tasks"
      summary: "Delete a task by projectID, columnID and taskID"
      description: "This endpoint uses a DELETE request to delete a task by projectID, columnID and taskID"
      produces:
        - "application/json"
      parameters:
        - name: "projectID"
          in: "path"
          description: "ID of a project"
          required: true
          type: "integer"
          format: "int"
        - name: "columnID"
          in: "path"
          description: "ID of a column"
          required: true
          type: "integer"
          format: "int"
        - name: "taskID"
          in: "path"
          description: "ID of a task to delete"
          required: true
          type: "integer"
          format: "int"
      responses:
        204:
          description: "No content"
        400:
          description: "Bad request"
    get:
      tags:
        - "Tasks"
      summary: "Get a task by projectID, columnID and taskID"
      description: "This endpoint uses a GET request to retrieve a task by projectID, columnID and taskID"
      produces:
        - "application/json"
      parameters:
        - name: "projectID"
          in: "path"
          description: "ID of a project"
          required: true
          type: "integer"
          format: "int"
        - name: "columnID"
          in: "path"
          description: "ID of a column"
          required: true
          type: "integer"
          format: "int"
        - name: "taskID"
          in: "path"
          description: "ID of a task to return"
          required: true
          type: "integer"
          format: "int"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
    put:
      tags:
        - "Tasks"
      summary: "Update a task by projectID, columnID and taskID"
      description: "This endpoint uses an UPDATE request to update a a task by projectID, columnID and taskID"
      produces:
        - "application/json"
      parameters:
        - name: "projectID"
          in: "path"
          description: "ID of project"
          required: true
          type: "integer"
          format: "int"
        - name: "columnID"
          in: "path"
          description: "ID of a column"
          required: true
          type: "integer"
          format: "int"
        - name: "taskID"
          in: "path"
          description: "ID of a task to update"
          required: true
          type: "integer"
          format: "int"
        - in: "body"
          name: "body"
          description: "Updated task object"
          required: true
          schema:
            $ref: "#/definitions/Task"
      responses:
        200:
          #            description: "OK"
          #            schema:
          $ref: "#/definitions/Project"
        400:
          description: "Bad request"
  #######################################################
  /comments/:
    get:
      tags:
        - "Comments"
      summary: "Get a list of all comments"
      description: "This endpoint uses a GET request to retrieve a list of all comments"
      produces:
        - "application/json"
      responses:
        200:
          description: "OK"
  /projects/{projectID}/columns/{columnID}/tasks/{taskID}/comments/:
    get:
      tags:
        - "Comments"
      summary: "Get comments by projectID, columnID and taskID"
      description: "This endpoint uses a GET request to retrieve comments by comments by projectID, columnID and taskID"
      produces:
        - "application/json"
      parameters:
        - name: "projectID"
          in: "path"
          description: "ID of a project"
          required: true
          type: "integer"
          format: "int"
        - name: "columnID"
          in: "path"
          description: "ID of a column"
          required: true
          type: "integer"
          format: "int"
        - name: "taskID"
          in: "path"
          description: "ID of a task"
          required: true
          type: "integer"
          format: "int"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
    post:
      tags:
        - "Comments"
      summary: "Create new comment"
      description: "This endpoint uses a POST request to create a new comment by projectID, columnID and TaskID"
      produces:
        - "application/json"
      parameters:
        - name: "projectID"
          in: "path"
          description: "ID of a project"
          required: true
          type: "integer"
          format: "int"
        - name: "columnID"
          in: "path"
          description: "ID of a column"
          required: true
          type: "integer"
          format: "int"
        - name: "taskID"
          in: "path"
          description: "ID of a task"
          required: true
          type: "integer"
          format: "int"
      responses:
        "400":
          description: "Bad request"
        "201":
          description: "Created"
  /projects/{projectID}/columns/{columnID}/tasks/{taskID}/comments/{commentID}:
    delete:
      tags:
        - "Comments"
      summary: "Delete a comment by projectID, columnID, taskID and commentID"
      description: "This endpoint uses a DELETE request to delete a comment by projectID, columnID, taskID and commentID"
      produces:
        - "application/json"
      parameters:
        - name: "projectID"
          in: "path"
          description: "ID of a project"
          required: true
          type: "integer"
          format: "int"
        - name: "columnID"
          in: "path"
          description: "ID of a column"
          required: true
          type: "integer"
          format: "int"
        - name: "taskID"
          in: "path"
          description: "ID of a task"
          required: true
          type: "integer"
          format: "int"
        - name: "commentID"
          in: "path"
          description: "ID of a comment to delete"
          required: true
          type: "integer"
          format: "int"
      responses:
        204:
          description: "No content"
        400:
          description: "Bad request"
    get:
      tags:
        - "Comments"
      summary: "Get a comment by projectID, columnID, taskID and commentID"
      description: "This endpoint uses a GET request to retrieve a comment by projectID, columnID, taskID and commentID"
      produces:
        - "application/json"
      parameters:
        - name: "projectID"
          in: "path"
          description: "ID of a project"
          required: true
          type: "integer"
          format: "int"
        - name: "columnID"
          in: "path"
          description: "ID of a column"
          required: true
          type: "integer"
          format: "int"
        - name: "taskID"
          in: "path"
          description: "ID of a task"
          required: true
          type: "integer"
          format: "int"
        - name: "commentID"
          in: "path"
          description: "ID of a comment to return"
          required: true
          type: "integer"
          format: "int"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
    put:
      tags:
        - "Comments"
      summary: "Update a comment by projectID, columnID, taskID and commentID"
      description: "This endpoint uses an UPDATE request to update a comment by projectID, columnID, taskID and commentID"
      produces:
        - "application/json"
      parameters:
        - name: "projectID"
          in: "path"
          description: "ID of project"
          required: true
          type: "integer"
          format: "int"
        - name: "columnID"
          in: "path"
          description: "ID of a column"
          required: true
          type: "integer"
          format: "int"
        - name: "taskID"
          in: "path"
          description: "ID of a task"
          required: true
          type: "integer"
          format: "int"
        - name: "commentID"
          in: "path"
          description: "ID of an updated comment"
          required: true
          type: "integer"
          format: "int"
        - in: "body"
          name: "body"
          description: "Updated comment object"
          required: true
          schema:
            $ref: "#/definitions/Comment"
      responses:
        200:
          #            description: "OK"
          #            schema:
          $ref: "#/definitions/Project"
        400:
          description: "Bad request"
  #######################################################

definitions:

  #######################################################
  Project:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int"
      name:
        type: "string"
      description:
        type: "string"
  #######################################################
  Column:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int"
      name:
        type: "string"
      project_id:
        type: "integer"
        format: "int"
      order_number:
        type: "integer"
        format: "int"
      status:
        type: "string"
  #######################################################
  Task:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int"
      name:
        type: "string"
      status:
        type: "string"
      description:
        type: "string"
      column_id:
        type: "integer"
        format: "int"
  #######################################################
  Comment:
    type: "object"
    properties:
      description:
        type: "string"
      task_id:
        type: "integer"
        format: "int"
      id:
        type: "integer"
        format: "int"
  #######################################################

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"